name: Maven Test Only for Feature Branches

on:
  push:
    branches:
      - '**'  # écouter tous les push
  pull_request:
    branches:
      - '**'  # écouter toutes les PR
  workflow_call:
    inputs:
      MAVEN_CLI_OPTS:
        description: 'Options maven'
        required: false
        type: string
        default: "-s /root/.m2/settings.xml --batch-mode"
      docker_registry:
        description: 'Host registry docker'
        required: true
        type: string
      docker_owner:
        description: 'Owner docker'
        required: true
        type: string
      docker_image_name:
        description: 'Docker image name'
        required: true
        type: string
      version_fallback:
        description: 'Docker image name'
        required: false
        type: string
        default: '1.0.0'
      environment_approved:
        description: 'environment for manual approved '
        required: false
        type: string
        default: "manual-approval"
      build_maven:
        description: 'Enabled to build maven'
        required: false
        type: boolean
        default: false
      build_image:
        description: 'Enabled to build docker image'
        required: false
        type: boolean
        default: false
    secrets:
      docker_registry_user:
        description: 'User registry docker'
        required: true
      docker_registry_password:
        description: 'Password registry docker'
        required: true
      CUSTOM_GITHUB_TOKEN:
        description: 'GitHub token for authentication'
        required: true
      GITHUB_USERNAME:
        description: 'GitHub username for authentication'
        required: true
      MAVEN_PAT:
        description: 'GitHub MAVEN_PAT'
        required: true
      MAVEN_SETTINGS:
        description: 'Maven settings'
        required: false
      MAVEN_SETTINGS_SECURITY:
        description: 'Maven settings security'
        required: false

jobs:

  #  job executé uniquement si c’est un pull Request venant d’une branche hotfix/*
  # ou d'un push si ce n’est pas sur develop, release/*, support/*, hotfix/*
  maven_test_build:
    name: Maven build test
    if: |
      (github.event_name == 'pull_request' && startsWith(github.head_ref || '', 'hotfix')) ||
      (github.event_name == 'push' &&
      github.ref != 'refs/heads/develop' &&
      !startsWith(github.ref, 'refs/heads/release/') &&
      !startsWith(github.ref, 'refs/heads/support/') &&
      !startsWith(github.ref, 'refs/heads/hotfix/'))
    uses: ./.github/workflows/maven-build-template.yml
    with:
      maven_test_only: true
      maven_cli_opts: ${{ inputs.MAVEN_CLI_OPTS }}
    secrets:
      GITHUB_USERNAME: ${{ secrets.GITHUB_USERNAME }}
      CUSTOM_GITHUB_TOKEN: ${{ secrets.CUSTOM_GITHUB_TOKEN }}

  # Branche develop, et que l'événement est un push normal (pas via API, planificateur ou appel)
  # ou branche de type release/*, sans condition sur l’événement.
  maven_build:
    name: Maven build
    if: |
      (
        (
          github.event_name == 'workflow_dispatch' &&
          inputs.build_maven == true &&
          (
            github.ref == 'refs/heads/develop' ||
            startsWith(github.ref, 'refs/heads/release/') ||
            startsWith(github.ref, 'refs/heads/hotfix/')
          )
        ) ||
        (
          github.event_name != 'workflow_dispatch' &&
          (
            github.ref == 'refs/heads/develop' &&
            github.event_name != 'repository_dispatch' &&
            github.event_name != 'schedule' ||
            startsWith(github.ref, 'refs/heads/release/') ||
            startsWith(github.ref, 'refs/heads/hotfix/')
          )
        )
      )
    uses: ./.github/workflows/maven-build-template.yml
    with:
      maven_test_only: false
      maven_cli_opts: ${{ inputs.MAVEN_CLI_OPTS }}
    secrets:
      GITHUB_USERNAME: ${{ secrets.GITHUB_USERNAME }}
      CUSTOM_GITHUB_TOKEN: ${{ secrets.CUSTOM_GITHUB_TOKEN }}

  docker_build_push:
    if: |
      (
        github.event_name == 'workflow_dispatch' &&
        inputs.build_image == true
      ) ||
      github.event_name != 'workflow_dispatch'
    name: Docker build and push
    needs: maven_build
    uses: ./.github/workflows/jobs-docker.yml
    with:
      docker_registry: ${{ inputs.docker_registry }}
      docker_owner: ${{ inputs.docker_owner }}
      docker_image_name: ${{ inputs.docker_image_name }}
      version_fallback: ${{ inputs.version_fallback }}
      environment_approved: ${{ inputs.environment_approved }}
    secrets:
      docker_registry_user: ${{ secrets.docker_registry_user }}
      docker_registry_password: ${{ secrets.docker_registry_password }}
